{
  "content": [
    {
      "type": "text",
      "block": [
        {
          "indent": 0,
          "line": [
            {
              "emphasis": "none",
              "segment": "One of the most common criticisms of Ada has to be the perceived verbosity. In fact, this is a deliberate design decision. Often in our rush to insert more and more programmer convinces into our favourite languages, we tend to miss the raw human weaknesses that turn these shortcuts into unrelenting hazards."
            }
          ]
        }
      ]
    },
    {
      "type": "text",
      "block": [
        {
          "indent": 0,
          "line": [
            {
              "emphasis": "none",
              "segment": "We have been using systems and technology for eons to limit the effects of our own human weaknesses. An early example is double-entry accounting, a system who's basic function is to catch common human errors, is thousands of years old. Yet it is rare to find accountants who believe accrual accounting should be abandoned, and replaced with something more error-prone but convenient. Perhaps they recognize that the often tedious demands of accrual accounting is exactly what makes it so effective."
            }
          ]
        }
      ]
    },
    {
      "type": "text",
      "block": [
        {
          "indent": 0,
          "line": [
            {
              "emphasis": "none",
              "segment": "Pilots, who fly planes every day of their career, often the same plane each time, always perform the same checklists, every single time. Checklist such as these are another time-tested system to avoid the common human weakness of complacency through repetition. The truth is, the more comfortable we get at a skill, the less alert we become to the details. One rarely finds accountants complaining about checklists; because they know what their purpose is, and how important they are."
            }
          ]
        }
      ]
    },
    {
      "type": "text",
      "block": [
        {
          "indent": 0,
          "line": [
            {
              "emphasis": "none",
              "segment": "Ada was specifically designed with the recognition that programming itself is a human activity, and this means it is subject to human weakness. Ada was developed with a specific and intentional goal of using technology to limit the negative effects of human weaknesses. It's strict type system and data modeling require careful consideration and careful design. It's verbose nature aids in readability, maintainability, and makes small mistakes like we will talk about today, less likely to slip through unnoticed, or indeed to occur at all."
            }
          ]
        }
      ]
    },
    {
      "type": "text",
      "block": [
        {
          "indent": 0,
          "line": [
            {
              "emphasis": "none",
              "segment": "In fact, Ada is perhaps the only mature language that began its life with a rigorously refined set of requirements that went through four revisions over three years, before any language design began. Those basic requirements live-on as the very first section of the Ada specification: \"Design Goals\". The C++ standard has no equivalent rationale whatsoever."
            }
          ]
        }
      ]
    },
    {
      "type": "text",
      "block": [
        {
          "indent": 0,
          "line": [
            {
              "emphasis": "none",
              "segment": "Here are some highlights from the Ada 2012 standard:"
            }
          ]
        }
      ]
    },
    {
      "type": "image",
      "src": "/blog_assets/1/ada_rm_design_goals.jpg",
      "alt": "Ada 2012 Reference Manual - Pg xii, various highlights"
    },
    {
      "type": "text",
      "block": [
        {
          "indent": 0,
          "line": [
            {
              "emphasis": "none",
              "segment": "In these \"SHUA\" posts, I seek to look at the regular stream of vulnerabilities in open source software, and emulate as reasonably possible what the same programmer would have likely produced, had they simply been using Ada."
            }
          ]
        }
      ]
    },
    {
      "type": "code",
      "block": [
        {
          "indent": 0,
          "line": [
            {
              "emphasis": "none",
              "segment": "static OSStatus"
            }
          ]
        },
        {
          "indent": 0,
          "line": [
            {
              "emphasis": "none",
              "segment": "SSLVerifySignedServerKeyExchange(SSLContext *ctx, bool isRsa, SSLBuffer signedParams,"
            }
          ]
        },
        {
          "indent": 0,
          "line": [
            {
              "emphasis": "none",
              "segment": "                                 uint8_t *signature, UInt16 signatureLen)"
            }
          ]
        },
        {
          "indent": 0,
          "line": [
            {
              "emphasis": "none",
              "segment": "{"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": "OSStatus        err;"
            }
          ]
        }
      ]
    },
    {
      "type": "code",
      "block": [
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": "if ((err = ReadyHash(&SSLHashSHA1, &hashCtx)) != 0)"
            }
          ]
        },
        {
          "indent": 2,
          "line": [
            {
              "emphasis": "none",
              "segment": "goto fail;"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": "if ((err = SSLHashSHA1.update(&hashCtx, &clientRandom)) != 0)"
            }
          ]
        },
        {
          "indent": 2,
          "line": [
            {
              "emphasis": "none",
              "segment": "goto fail;"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": "if ((err = SSLHashSHA1.update(&hashCtx, &serverRandom)) != 0)"
            }
          ]
        },
        {
          "indent": 2,
          "line": [
            {
              "emphasis": "none",
              "segment": "goto fail;"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": "if ((err = SSLHashSHA1.update(&hashCtx, &signedParams)) != 0)"
            }
          ]
        },
        {
          "indent": 2,
          "line": [
            {
              "emphasis": "none",
              "segment": "goto fail;"
            }
          ]
        },
        {
          "indent": 2,
          "line": [
            {
              "emphasis": "none",
              "segment": "goto fail;"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": "if ((err = SSLHashSHA1.final(&hashCtx, &hashOut)) != 0)"
            }
          ]
        },
        {
          "indent": 2,
          "line": [
            {
              "emphasis": "none",
              "segment": "goto fail;"
            }
          ]
        }
      ]
    },
    {
      "type": "code",
      "block": [
        {
          "indent": 0,
          "line": [
            {
              "emphasis": "none",
              "segment": "fail:"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": "SSLFreeBuffer(&signedHashes);"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": "SSLFreeBuffer(&hashCtx);"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": "return err;"
            }
          ]
        },
        {
          "indent": 0,
          "line": [
            {
              "emphasis": "none",
              "segment": "}"
            }
          ]
        }
      ]
    },
    {
      "type": "code",
      "block": [
        {
          "indent": 0,
          "line": [
            {
              "emphasis": "bold",
              "segment": "function "
            },
            {
              "emphasis": "none",
              "segment": "SSL_Versify_Signed_Server_Key_Exchange"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": "(Context      : "
            },
            {
              "emphasis": "bold",
              "segment": "in out "
            },
            {
              "emphasis": "none",
              "segment": "SSL_Context;"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": " Is_RSA       : "
            },
            {
              "emphasis": "bold",
              "segment": "in     "
            },
            {
              "emphasis": "none",
              "segment": "Boolean;"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": " Signed_Params: "
            },
            {
              "emphasis": "bold",
              "segment": "in     "
            },
            {
              "emphasis": "none",
              "segment": "SSL_Buffer_Access;"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": " Signature    : "
            },
            {
              "emphasis": "bold",
              "segment": "in     "
            },
            {
              "emphasis": "none",
              "segment": "SSL_Signature)"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": "-- Note we can get \"signatureLen\" from Signature'Length"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": " "
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "bold",
              "segment": "return "
            },
            {
              "emphasis": "none",
              "segment": "OS_Status"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": " "
            }
          ]
        },
        {
          "indent": 0,
          "line": [
            {
              "emphasis": "bold",
              "segment": "is"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": "Ret_Error: OS_Status;"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": "Hash_Ctx : SSL_Buffer_Access := "
            },
            {
              "emphasis": "bold",
              "segment": "null;"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": "Hash_Out : SSL_Buffer_Access := "
            },
            {
              "emphasis": "bold",
              "segment": "null;"
            }
          ]
        }
      ]
    },
    {
      "type": "code",
      "block": [
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": "Ret_Error := Ready_Hash (SSL_Hash_SHA1, Hash_Ctx);"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "bold",
              "segment": "if "
            },
            {
              "emphasis": "none",
              "segment": "Ret_Error /= OK "
            },
            {
              "emphasis": "bold",
              "segment": "then"
            }
          ]
        },
        {
          "indent": 2,
          "line": [
            {
              "emphasis": "bold",
              "segment": "goto "
            },
            {
              "emphasis": "none",
              "segment": "Fail;"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "bold",
              "segment": "end if;"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": " "
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": "Ret_Error := SSL_Hash_SHA1.Update (Hash_Ctx, Server_Random);"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "bold",
              "segment": "if "
            },
            {
              "emphasis": "none",
              "segment": "Ret_Error /= OK "
            },
            {
              "emphasis": "bold",
              "segment": "then"
            }
          ]
        },
        {
          "indent": 2,
          "line": [
            {
              "emphasis": "bold",
              "segment": "goto "
            },
            {
              "emphasis": "none",
              "segment": "Fail;"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "bold",
              "segment": "end if;"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": " "
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": "Ret_Error := SSL_Hash_SHA1.Update (Hash_Ctx, Client_Random);"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "bold",
              "segment": "if "
            },
            {
              "emphasis": "none",
              "segment": "Ret_Error /= OK "
            },
            {
              "emphasis": "bold",
              "segment": "then"
            }
          ]
        },
        {
          "indent": 2,
          "line": [
            {
              "emphasis": "bold",
              "segment": "goto "
            },
            {
              "emphasis": "none",
              "segment": "Fail;"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "bold",
              "segment": "end if;"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": " "
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": "Ret_Error := SSL_Hash_SHA1.Update (Hash_Ctx, Signed_Params);"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "bold",
              "segment": "if "
            },
            {
              "emphasis": "none",
              "segment": "Ret_Error /= OK "
            },
            {
              "emphasis": "bold",
              "segment": "then"
            }
          ]
        },
        {
          "indent": 2,
          "line": [
            {
              "emphasis": "bold",
              "segment": "goto "
            },
            {
              "emphasis": "none",
              "segment": "Fail;"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "bold",
              "segment": "end if;"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": " "
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": "Ret_Error := SSL_Hash_SHA1.Final (Hash_Ctx, Hash_Out);"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "bold",
              "segment": "if "
            },
            {
              "emphasis": "none",
              "segment": "Ret_Error /= OK "
            },
            {
              "emphasis": "bold",
              "segment": "then"
            }
          ]
        },
        {
          "indent": 2,
          "line": [
            {
              "emphasis": "bold",
              "segment": "goto "
            },
            {
              "emphasis": "none",
              "segment": "Fail;"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "bold",
              "segment": "end if;"
            }
          ]
        }
      ]
    },
    {
      "type": "code",
      "block": [
        {
          "indent": 0,
          "line": [
            {
              "emphasis": "none",
              "segment": "<<Fail>>"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": "SSL_Free_Buffer (Hashes);"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": "SSL_Free_Buffer (Signed_Hashes);"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": "SSL_Free_Buffer (Hash_Ctx);"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": " "
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "bold",
              "segment": "return "
            },
            {
              "emphasis": "none",
              "segment": "Ret_Error;"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": " "
            }
          ]
        },
        {
          "indent": 0,
          "line": [
            {
              "emphasis": "bold",
              "segment": "end "
            },
            {
              "emphasis": "none",
              "segment": "SSL_Versify_Signed_Server_Key_Exchange;"
            }
          ]
        }
      ]
    },
    {
      "type": "code",
      "block": [
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "highlight",
              "segment": "if ((err = SSLHashSHA1.update(&hashCtx, &serverRandom)) != 0)"
            }
          ]
        },
        {
          "indent": 2,
          "line": [
            {
              "emphasis": "highlight",
              "segment": "goto fail;"
            }
          ]
        }
      ]
    },
    {
      "type": "code",
      "block": [
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "highlight",
              "segment": "if ((err = SomeOtherFunction) != 0)"
            }
          ]
        },
        {
          "indent": 2,
          "line": [
            {
              "emphasis": "none",
              "segment": "goto fail;"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": "if ((err = SSLHashSHA1.final(&hashCtx, &hashOut)) != 0)"
            }
          ]
        },
        {
          "indent": 2,
          "line": [
            {
              "emphasis": "none",
              "segment": "goto fail;"
            }
          ]
        }
      ]
    },
    {
      "type": "code",
      "block": [
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": "if ((err = SSLHashSHA1.update(&hashCtx, &serverRandom)) != 0)"
            }
          ]
        },
        {
          "indent": 2,
          "line": [
            {
              "emphasis": "none",
              "segment": "goto fail;"
            }
          ]
        },
        {
          "indent": 2,
          "line": [
            {
              "emphasis": "none",
              "segment": "goto fail;"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": "if ((err = SSLHashSHA1.final(&hashCtx, &hashOut)) != 0)"
            }
          ]
        },
        {
          "indent": 2,
          "line": [
            {
              "emphasis": "none",
              "segment": "goto fail;"
            }
          ]
        }
      ]
    },
    {
      "type": "code",
      "block": [
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "highlight",
              "segment": "Ret_Error := SSL_Hash_SHA1.Update (Hash_Ctx, Server_Random);"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "bold_highlight",
              "segment": "if "
            },
            {
              "emphasis": "highlight",
              "segment": "Ret_Error /= OK "
            },
            {
              "emphasis": "bold_highlight",
              "segment": "then"
            }
          ]
        },
        {
          "indent": 2,
          "line": [
            {
              "emphasis": "bold_highlight",
              "segment": "goto "
            },
            {
              "emphasis": "highlight",
              "segment": "Fail;"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "bold_highlight",
              "segment": "end if;"
            }
          ]
        }
      ]
    },
    {
      "type": "code",
      "block": [
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "highlight",
              "segment": "Ret_Error := Some_Other_Function;"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "bold_highlight",
              "segment": "if "
            },
            {
              "emphasis": "highlight",
              "segment": "Ret_Error /= OK "
            },
            {
              "emphasis": "bold_highlight",
              "segment": "then"
            }
          ]
        },
        {
          "indent": 2,
          "line": [
            {
              "emphasis": "bold_highlight",
              "segment": "goto "
            },
            {
              "emphasis": "highlight",
              "segment": "Fail;"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "bold",
              "segment": "end if;"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": " "
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": "Ret_Error := SSL_Hash_SHA1.Final (Hash_Ctx, Hash_Out);"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "bold",
              "segment": "if "
            },
            {
              "emphasis": "none",
              "segment": "Ret_Error /= OK "
            },
            {
              "emphasis": "bold",
              "segment": "then"
            }
          ]
        },
        {
          "indent": 2,
          "line": [
            {
              "emphasis": "bold",
              "segment": "goto "
            },
            {
              "emphasis": "none",
              "segment": "Fail;"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "bold",
              "segment": "end if;"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": " "
            }
          ]
        }
      ]
    },
    {
      "type": "code",
      "block": [
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": "Ret_Error := SSL_Hash_SHA1.Update (Hash_Ctx, Server_Random);"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "bold",
              "segment": "if "
            },
            {
              "emphasis": "none",
              "segment": "Ret_Error /= OK "
            },
            {
              "emphasis": "bold",
              "segment": "then"
            }
          ]
        },
        {
          "indent": 2,
          "line": [
            {
              "emphasis": "bold",
              "segment": "goto "
            },
            {
              "emphasis": "none",
              "segment": "Fail;"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "bold",
              "segment": "end if;"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "bold",
              "segment": "end if;"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": " "
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": "Ret_Error := SSL_Hash_SHA1.Final (Hash_Ctx, Hash_Out);"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "bold",
              "segment": "if "
            },
            {
              "emphasis": "none",
              "segment": "Ret_Error /= OK "
            },
            {
              "emphasis": "bold",
              "segment": "then"
            }
          ]
        },
        {
          "indent": 2,
          "line": [
            {
              "emphasis": "bold",
              "segment": "goto "
            },
            {
              "emphasis": "none",
              "segment": "Fail;"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "bold",
              "segment": "end if;"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": " "
            }
          ]
        }
      ]
    },
    {
      "type": "code",
      "block": [
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": "Ret_Error := SSL_Hash_SHA1.Update (Hash_Ctx, Client_Random);"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "bold",
              "segment": "if "
            },
            {
              "emphasis": "none",
              "segment": "Ret_Error /= OK "
            },
            {
              "emphasis": "bold",
              "segment": "then"
            }
          ]
        },
        {
          "indent": 2,
          "line": [
            {
              "emphasis": "bold",
              "segment": "goto "
            },
            {
              "emphasis": "none",
              "segment": "Fail;"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "bold",
              "segment": "end if;"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": " "
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "bold",
              "segment": "if "
            },
            {
              "emphasis": "none",
              "segment": "Ret_Error /= OK "
            },
            {
              "emphasis": "bold",
              "segment": "then"
            }
          ]
        },
        {
          "indent": 2,
          "line": [
            {
              "emphasis": "bold",
              "segment": "goto "
            },
            {
              "emphasis": "none",
              "segment": "Fail;"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "bold",
              "segment": "end if;"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": " "
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": "Ret_Error := SSL_Hash_SHA1.Final (Hash_Ctx, Hash_Out);"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "bold",
              "segment": "if "
            },
            {
              "emphasis": "none",
              "segment": "Ret_Error /= OK "
            },
            {
              "emphasis": "bold",
              "segment": "then"
            }
          ]
        },
        {
          "indent": 2,
          "line": [
            {
              "emphasis": "bold",
              "segment": "goto "
            },
            {
              "emphasis": "none",
              "segment": "Fail;"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "bold",
              "segment": "end if;"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": " "
            }
          ]
        }
      ]
    },
    {
      "type": "code",
      "block": [
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": "Ret_Error := Ready_Hash (SSL_Hash_SHA1, Hash_Ctx);"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "bold",
              "segment": "if "
            },
            {
              "emphasis": "none",
              "segment": "Ret_Error /= OK "
            },
            {
              "emphasis": "bold",
              "segment": "then"
            }
          ]
        },
        {
          "indent": 2,
          "line": [
            {
              "emphasis": "bold",
              "segment": "goto "
            },
            {
              "emphasis": "none",
              "segment": "Fail;"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "bold",
              "segment": "end if;"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": " "
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": "Ret_Error := SSL_Hash_SHA1.Update (Hash_Ctx, Server_Random);"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "bold",
              "segment": "if "
            },
            {
              "emphasis": "none",
              "segment": "Ret_Error /= OK "
            },
            {
              "emphasis": "bold",
              "segment": "then"
            }
          ]
        },
        {
          "indent": 2,
          "line": [
            {
              "emphasis": "bold",
              "segment": "goto "
            },
            {
              "emphasis": "none",
              "segment": "Fail;"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "bold",
              "segment": "end if;"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": " "
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": "Ret_Error := SSL_Hash_SHA1.Update (Hash_Ctx, Client_Random);"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "bold",
              "segment": "if "
            },
            {
              "emphasis": "none",
              "segment": "Ret_Error /= OK "
            },
            {
              "emphasis": "bold",
              "segment": "then"
            }
          ]
        },
        {
          "indent": 2,
          "line": [
            {
              "emphasis": "bold",
              "segment": "goto "
            },
            {
              "emphasis": "none",
              "segment": "Fail;"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "bold",
              "segment": "end if;"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": " "
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": "Ret_Error := SSL_Hash_SHA1.Update (Hash_Ctx, Signed_Params);"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "bold",
              "segment": "if "
            },
            {
              "emphasis": "none",
              "segment": "Ret_Error /= OK "
            },
            {
              "emphasis": "bold",
              "segment": "then"
            }
          ]
        },
        {
          "indent": 2,
          "line": [
            {
              "emphasis": "bold",
              "segment": "goto "
            },
            {
              "emphasis": "none",
              "segment": "Fail;"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "bold",
              "segment": "end if;"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "bold",
              "segment": "goto "
            },
            {
              "emphasis": "none",
              "segment": "Fail;"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": " "
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": "Ret_Error := SSL_Hash_SHA1.Final (Hash_Ctx, Hash_Out);"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "bold",
              "segment": "if "
            },
            {
              "emphasis": "none",
              "segment": "Ret_Error /= OK "
            },
            {
              "emphasis": "bold",
              "segment": "then"
            }
          ]
        },
        {
          "indent": 2,
          "line": [
            {
              "emphasis": "bold",
              "segment": "goto "
            },
            {
              "emphasis": "none",
              "segment": "Fail;"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "bold",
              "segment": "end if;"
            }
          ]
        },
        {
          "indent": 1,
          "line": [
            {
              "emphasis": "none",
              "segment": " "
            }
          ]
        }
      ]
    },
    {
      "type": "code",
      "block": [
        {
          "indent": 0,
          "line": [
            {
              "emphasis": "none",
              "segment": "$ gcc -c fail.adb"
            }
          ]
        },
        {
          "indent": 0,
          "line": [
            {
              "emphasis": "none",
              "segment": "fail.adb:22:04: warning: unreachable code"
            }
          ]
        }
      ]
    }
  ]
}